/*
 * Admin API Documentation
 *
 * The Ed-Fi Admin API is a REST API-based administrative interface for managing vendors, applications, client credentials, and authorization rules for accessing an Ed-Fi API.
 *
 * The version of the OpenAPI document: v2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdFi.Ods.AdminApi.V2.Client.Client.OpenAPIDateConverter;

namespace EdFi.Ods.AdminApi.V2.Client.Model
{
    /// <summary>
    /// OdsInstanceDetailModel
    /// </summary>
    [DataContract(Name = "odsInstanceDetailModel")]
    public partial class OdsInstanceDetailModel : IEquatable<OdsInstanceDetailModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OdsInstanceDetailModel" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="name">name.</param>
        /// <param name="instanceType">instanceType.</param>
        /// <param name="odsInstanceContexts">odsInstanceContexts.</param>
        /// <param name="odsInstanceDerivatives">odsInstanceDerivatives.</param>
        public OdsInstanceDetailModel(int id = default(int), string name = default(string), string instanceType = default(string), List<OdsInstanceContextModel> odsInstanceContexts = default(List<OdsInstanceContextModel>), List<OdsInstanceDerivativeModel> odsInstanceDerivatives = default(List<OdsInstanceDerivativeModel>))
        {
            this.Id = id;
            this.Name = name;
            this.InstanceType = instanceType;
            this.OdsInstanceContexts = odsInstanceContexts;
            this.OdsInstanceDerivatives = odsInstanceDerivatives;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets InstanceType
        /// </summary>
        [DataMember(Name = "instanceType", EmitDefaultValue = true)]
        public string InstanceType { get; set; }

        /// <summary>
        /// Gets or Sets OdsInstanceContexts
        /// </summary>
        [DataMember(Name = "odsInstanceContexts", EmitDefaultValue = true)]
        public List<OdsInstanceContextModel> OdsInstanceContexts { get; set; }

        /// <summary>
        /// Gets or Sets OdsInstanceDerivatives
        /// </summary>
        [DataMember(Name = "odsInstanceDerivatives", EmitDefaultValue = true)]
        public List<OdsInstanceDerivativeModel> OdsInstanceDerivatives { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OdsInstanceDetailModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  InstanceType: ").Append(InstanceType).Append("\n");
            sb.Append("  OdsInstanceContexts: ").Append(OdsInstanceContexts).Append("\n");
            sb.Append("  OdsInstanceDerivatives: ").Append(OdsInstanceDerivatives).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OdsInstanceDetailModel);
        }

        /// <summary>
        /// Returns true if OdsInstanceDetailModel instances are equal
        /// </summary>
        /// <param name="input">Instance of OdsInstanceDetailModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OdsInstanceDetailModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Id == input.Id ||
                    this.Id.Equals(input.Id)
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.InstanceType == input.InstanceType ||
                    (this.InstanceType != null &&
                    this.InstanceType.Equals(input.InstanceType))
                ) && 
                (
                    this.OdsInstanceContexts == input.OdsInstanceContexts ||
                    this.OdsInstanceContexts != null &&
                    input.OdsInstanceContexts != null &&
                    this.OdsInstanceContexts.SequenceEqual(input.OdsInstanceContexts)
                ) && 
                (
                    this.OdsInstanceDerivatives == input.OdsInstanceDerivatives ||
                    this.OdsInstanceDerivatives != null &&
                    input.OdsInstanceDerivatives != null &&
                    this.OdsInstanceDerivatives.SequenceEqual(input.OdsInstanceDerivatives)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.Id.GetHashCode();
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.InstanceType != null)
                {
                    hashCode = (hashCode * 59) + this.InstanceType.GetHashCode();
                }
                if (this.OdsInstanceContexts != null)
                {
                    hashCode = (hashCode * 59) + this.OdsInstanceContexts.GetHashCode();
                }
                if (this.OdsInstanceDerivatives != null)
                {
                    hashCode = (hashCode * 59) + this.OdsInstanceDerivatives.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
